# This config was automatically generated from your source code
# Stacks detected: deps:node:.,test:jest:
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
      - store_artifacts:
          path: ./test-results/
  build-node:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  deploy-docker:
    docker:
      - image: cimg/base:stable
    executor: node/default
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Authenticate with Docker Hub
          command: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Build Docker image
          command: docker build -t "$DOCKERHUB_USERNAME/resmngapp:latest" .
      - run:
          name: Push Docker image
          command: docker push "$DOCKERHUB_USERNAME/resmngapp:latest"
  lint:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Save ESLint report
          command: npx eslint . --format stylish > eslint-report.txt
      - store_artifacts:
          path: eslint-report.txt
  deploy-heroku:
    docker:
      - image: cimg/base:stable
    executor: node/default
    steps:
      - checkout
      - run:
          name: Deploy Main to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main

workflows:
  lint-test-build:
    jobs:
      - lint
      - test-node
      - build-node:
          filters:
            branches:
              only:
                - main
          requires:
            - lint
            - test-node
  deploy:
    jobs:
      - lint
      - test-node
      - deploy-docker:
          filters:
            branches:
              only:
                - main
          requires:
            - lint
            - test-node
          type: approval
      - deploy-heroku:
          filters:
            branches:
              only:
                - main
          requires:
            - lint
            - test-node
          type: approval
